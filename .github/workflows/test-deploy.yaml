---
name: Deploy Functions to CDF project using OIDC
on:
  push:
    branches: [idk]
    paths:
      - .github/workflows/test-deploy.yaml
      - functions/**

jobs:
  strategy-builder:
    name: Strategy Builder
    runs-on: ubuntu-latest
    outputs:
        files_list: ${{ steps.dump.outputs.files_list }}
        strategy-matrix: ${{ steps.get-matrix.outputs.MATRIX }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Deploy All Check
        run: echo "DEPLOY_ALL=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} -- .github/workflows/test-deploy.yaml functions/common | xargs)"
      # - name: Print All Functions
      #   run: echo "ALL_FUNCTIONS=$(find functions/*/ -path functions/common/ -prune -o -maxdepth 0 -type d -exec basename {} ';')" >> $GITHUB_OUTPUT
      - name: Only Matrix
        id: get-matrix
        run: |
          FUNCTIONS=$(find functions/*/ -path functions/common/ -prune -o -maxdepth 0 -type d -exec basename {} \;)
          echo MATRIX=$(jq -n --arg inarr "${FUNCTIONS}" '$inarr | split("\n")') >> $GITHUB_OUTPUT
      # - name: Build Strategy Matrix
      #   run: "test -n \"$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} -- .github/workflows/test-deploy.yaml functions/common | xargs)\" || echo \"Do NOT Deploy all\" && echo MATRIX=\"{\"function\": $(find functions/*/ -path functions/common/ -prune -o -maxdepth 0 -type d -exec basename {} \;| jq -Rs 'split(\"\n\")[:-1]')}\""
  deploy:
    name: Deploy to Cognite Functions
    runs-on: ubuntu-latest
    needs: strategy-builder
    strategy:
      matrix: 
        function: ${{fromJson(needs.strategy-builder.outputs.strategy-matrix.function)}}
        environment:
          - test
          - prod
    steps:
      - name: print files_list
        run: echo "${{ needs.strategy-builder.outputs.files_list }}"
      - name: Deploy all
        if: contains(needs.strategy-builder.outputs.files_list, matrix.deploy-all-functions)
        run: echo "Contains ${{ matrix.deploy-all-functions }}"
      - name: print idk
        run: echo "${{ toJson(vars) }}"
